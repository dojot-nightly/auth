---
# Create, get and delete a user
- config:
    - testset: "User CRUD Tests"

- test:
    - group: "USER SANE CRUD"
    - name: "Make sure Mr alfred_testuser ISN'T there to begin with"
    - url: "/user/alfred_testuser"
    - expected_status: [404]

- test:
    - group: "USER SANE CRUD"
    - name: "Create alfred"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "alfred_testuser",
                "service": "user",
                "email": "alfred@noemail.com",
                "name": "Alfred (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json', 'Authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOjAsInVzZXJuYW1lIjoidGVzdEFkbWluIn0.5-5OGSQSpzfF_k28IlEeV60NC8UuhAgSo55KAi0aLTU'}


- test:
    - group: "USER SANE CRUD"
    - name: "Make sure Mr alfred is there after we added him"
    - url: "/user/alfred_testuser"

- test:
    - group: "USER SANE CRUD"
    - name: "Get rid of alfred!"
    - url: "/user/alfred_testuser"
    - method: 'DELETE'
    - headers: {'Authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOjAsInVzZXJuYW1lIjoidGVzdEFkbWluIn0.5-5OGSQSpzfF_k28IlEeV60NC8UuhAgSo55KAi0aLTU'}

- test:
    - group: "USER SANE CRUD"
    - name: "Make sure Mr alfred ISN'T there after we deleted him"
    - url: "/user/alfred_testuser"
    - expected_status: [404]

# invalid user create request
- test:
    - group: "USER CREATE INVALID USERNAME"
    - name: "Should not create username initied by123user"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "123user",
                "service": "user",
                "email": "irrelevant@noemail.com",
                "name": "irrelevant (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json', 'Authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOjAsInVzZXJuYW1lIjoidGVzdEFkbWluIn0.5-5OGSQSpzfF_k28IlEeV60NC8UuhAgSo55KAi0aLTU'}
    - expected_status: [400]

- test:
    - group: "USER CREATE INVALID USERNAME"
    - name: "Should not create especial character us@er"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "us@er",
                "service": "user",
                "email": "irrelevant@noemail.com",
                "name": "irrelevant (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json', 'Authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOjAsInVzZXJuYW1lIjoidGVzdEFkbWluIn0.5-5OGSQSpzfF_k28IlEeV60NC8UuhAgSo55KAi0aLTU'}
    - expected_status: [400]

- test:
    - group: "USER CREATE INVALID USERNAME"
    - name: "Should not create null name user"
    - url: "/user"
    - method: "POST"
    - body: '{
                "service": "user",
                "email": "irrelevant@noemail.com",
                "name": "irrelevant (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json', 'Authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOjAsInVzZXJuYW1lIjoidGVzdEFkbWluIn0.5-5OGSQSpzfF_k28IlEeV60NC8UuhAgSo55KAi0aLTU'}
    - expected_status: [400]


- test:
    - group: "USER CREATE INVALID USERNAME"
    - name: "Should not create zerolen name user"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "",
                "service": "user",
                "email": "irrelevant@noemail.com",
                "name": "irrelevant (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json', 'Authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOjAsInVzZXJuYW1lIjoidGVzdEFkbWluIn0.5-5OGSQSpzfF_k28IlEeV60NC8UuhAgSo55KAi0aLTU'}
    - expected_status: [400]


- test:
    - group: "USER CREATE INVALID USERNAME"
    - name: "Should not create uppercase name user"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "IMNOTYELLYNG",
                "service": "user",
                "email": "irrelevant@noemail.com",
                "name": "irrelevant (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json', 'Authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOjAsInVzZXJuYW1lIjoidGVzdEFkbWluIn0.5-5OGSQSpzfF_k28IlEeV60NC8UuhAgSo55KAi0aLTU'}
    - expected_status: [400]


- test:
    - group: "USER CREATE INVALID USERNAME"
    - name: "Should not create underscode only username ______"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "________",
                "service": "user",
                "email": "irrelevant@noemail.com",
                "name": "irrelevant (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json', 'Authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOjAsInVzZXJuYW1lIjoidGVzdEFkbWluIn0.5-5OGSQSpzfF_k28IlEeV60NC8UuhAgSo55KAi0aLTU'}
    - expected_status: [400]

# create user invalid email

- test:
    - group: "USER CREATE INVALID EMAIL"
    - name: "Should not accept null email"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "validname",
                "service": "user",
                "name": "irrelevant (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json', 'Authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOjAsInVzZXJuYW1lIjoidGVzdEFkbWluIn0.5-5OGSQSpzfF_k28IlEeV60NC8UuhAgSo55KAi0aLTU'}
    - expected_status: [400]


- test:
    - group: "USER CREATE INVALID EMAIL"
    - name: "Should not accept email zerolen"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "validname",
                "service": "user",
                "email": "",
                "name": "irrelevant (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json', 'Authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOjAsInVzZXJuYW1lIjoidGVzdEFkbWluIn0.5-5OGSQSpzfF_k28IlEeV60NC8UuhAgSo55KAi0aLTU'}
    - expected_status: [400]

- test:
    - group: "USER CREATE INVALID EMAIL"
    - name: "Should not accept email withoud @"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "validname",
                "service": "user",
                "email": "testnoemail.com",
                "name": "irrelevant (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json', 'Authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOjAsInVzZXJuYW1lIjoidGVzdEFkbWluIn0.5-5OGSQSpzfF_k28IlEeV60NC8UuhAgSo55KAi0aLTU'}
    - expected_status: [400]

- test:
    - group: "USER CREATE INVALID EMAIL"
    - name: "Should not accept email withoud dot"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "validname",
                "service": "user",
                "email": "test@noemail",
                "name": "irrelevant (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json', 'Authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOjAsInVzZXJuYW1lIjoidGVzdEFkbWluIn0.5-5OGSQSpzfF_k28IlEeV60NC8UuhAgSo55KAi0aLTU'}
    - expected_status: [400]


- test:
    - group: "USER CREATE INVALID EMAIL"
    - name: "Should not accept email without nameserver"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "validname",
                "service": "user",
                "email": "test@.com",
                "name": "irrelevant (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json', 'Authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOjAsInVzZXJuYW1lIjoidGVzdEFkbWluIn0.5-5OGSQSpzfF_k28IlEeV60NC8UuhAgSo55KAi0aLTU'}
    - expected_status: [400]

- test:
    - group: "USER CREATE INVALID EMAIL"
    - name: "Should not accept uppercase mail"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "validname",
                "service": "user",
                "email": "YELLING@MAIL.COM",
                "name": "irrelevant (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json', 'Authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOjAsInVzZXJuYW1lIjoidGVzdEFkbWluIn0.5-5OGSQSpzfF_k28IlEeV60NC8UuhAgSo55KAi0aLTU'}
    - expected_status: [400]

# make some HTTP malformed requests
- test:
    - group: "USER INVALID CRUD REQUESTS"
    - name: "no mimetype on create user"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "alfred_testuser"
              }'
    - headers: {'Authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOjAsInVzZXJuYW1lIjoidGVzdEFkbWluIn0.5-5OGSQSpzfF_k28IlEeV60NC8UuhAgSo55KAi0aLTU'}
    - expected_status: [400]

- test:
    - group: "USER INVALID CRUD REQUESTS"
    - name: "invalid mimetype on create user"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "alfred_testuser"
              }'
    - headers: {'Content-Type': 'application/json', 'Authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOjAsInVzZXJuYW1lIjoidGVzdEFkbWluIn0.5-5OGSQSpzfF_k28IlEeV60NC8UuhAgSo55KAi0aLTU'}
    - expected_status: [400]

- test:
    - group: "USER SANE CRUD"
    - name: "Invalid JSON"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "alfred_testuser"
                "passwd": "exemplepwd",
              }'
    - headers: {'Content-Type': 'application/json', 'Authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOjAsInVzZXJuYW1lIjoidGVzdEFkbWluIn0.5-5OGSQSpzfF_k28IlEeV60NC8UuhAgSo55KAi0aLTU'}
    - expected_status: [400]

- test:
    - group: "USER INVALID CRUD REQUESTS"
    - name: "Delete inexistent user"
    - url: "/user/alfred_testuser"
    - method: "DELETE"
    - headers: {'Authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOjAsInVzZXJuYW1lIjoidGVzdEFkbWluIn0.5-5OGSQSpzfF_k28IlEeV60NC8UuhAgSo55KAi0aLTU'}
    - expected_status: [404]


# Test user unique constraint
- test:
    - group: "INVALID DUPLICATE USER CRUD"
    - name: "Create first user"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "unique_testuser",
                "service": "user",
                "email": "uniqueuser@noemail.com",
                "name": "Unique (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json', 'Authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOjAsInVzZXJuYW1lIjoidGVzdEFkbWluIn0.5-5OGSQSpzfF_k28IlEeV60NC8UuhAgSo55KAi0aLTU'}


- test:
    - group: "INVALID DUPLICATE USER CRUD"
    - name: "Try to create user with duplicate username"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "unique_testuser",
                "service": "user",
                "email": "anotheremail@noemail.com",
                "name": "Another (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json', 'Authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOjAsInVzZXJuYW1lIjoidGVzdEFkbWluIn0.5-5OGSQSpzfF_k28IlEeV60NC8UuhAgSo55KAi0aLTU'}
    - expected_status: [400]

- test:
    - group: "INVALID DUPLICATE USER CRUD"
    - name: "Try to create user with duplicate email"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "otheruser_testuser",
                "service": "user",
                "email": "uniqueuser@noemail.com",
                "name": "Another (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json', 'Authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOjAsInVzZXJuYW1lIjoidGVzdEFkbWluIn0.5-5OGSQSpzfF_k28IlEeV60NC8UuhAgSo55KAi0aLTU'}
    - expected_status: [400]

- test:
    - group: "INVALID DUPLICATE USER CRUD"
    - name: "Get rid of unique_testuser!"
    - url: "/user/unique_testuser"
    - headers: {'Authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOjAsInVzZXJuYW1lIjoidGVzdEFkbWluIn0.5-5OGSQSpzfF_k28IlEeV60NC8UuhAgSo55KAi0aLTU'}
    - method: 'DELETE'


# edge case inputs
- test:
    - group: "USER EDGE LEN INPUT"
    - name: "Create edge len usernamed alfred"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "alfred_ridiculous_but_acceptable_name123",
                "service": "user",
                "email": "alfred@noemail.com",
                "name": "Alfred (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json', 'Authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOjAsInVzZXJuYW1lIjoidGVzdEFkbWluIn0.5-5OGSQSpzfF_k28IlEeV60NC8UuhAgSo55KAi0aLTU'}


- test:
    - group: "USER EDGE LEN INPUT"
    - name: "Get rid of long named alfred!"
    - url: "/user/alfred_ridiculous_but_acceptable_name123"
    - headers: {'Authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOjAsInVzZXJuYW1lIjoidGVzdEFkbWluIn0.5-5OGSQSpzfF_k28IlEeV60NC8UuhAgSo55KAi0aLTU'}
    - method: 'DELETE'


- test:
    - group: "USER EDGE LEN INPUT"
    - name: "Create edge len email alfred"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "alfred_testuser",
                "service": "user",
                "email": "alfredblainecharlesdavidearlfrederickgeraldhubertirvimjohnkennethloydmartinneroalfredblainecharlesdavidearlfrederickgeraldhubertirvimjohnkennethloydmartinneroalfredblainecharlesdavidearlfrederickgeraldhubertirvimjohnkennethloydmarti@companyabsurdname.com",
                "name": "Alfred (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json', 'Authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOjAsInVzZXJuYW1lIjoidGVzdEFkbWluIn0.5-5OGSQSpzfF_k28IlEeV60NC8UuhAgSo55KAi0aLTU'}


- test:
    - group: "USER EDGE LEN INPUT"
    - name: "Get rid of long email alfred!"
    - url: "/user/alfred_testuser"
    - headers: {'Authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOjAsInVzZXJuYW1lIjoidGVzdEFkbWluIn0.5-5OGSQSpzfF_k28IlEeV60NC8UuhAgSo55KAi0aLTU'}
    - method: 'DELETE'

# user bad len inputs.
# these test depends on the values defined on database/inputConf
- test:
    - group: "USER BAD LEN INPUT"
    - name: "Create long usernamed alfred"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "alfred_ridiculous_irrelevant_long_username",
                "service": "user",
                "email": "alfred@noemail.com",
                "name": "Alfred (TestUser)",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json', 'Authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOjAsInVzZXJuYW1lIjoidGVzdEFkbWluIn0.5-5OGSQSpzfF_k28IlEeV60NC8UuhAgSo55KAi0aLTU'}
    - expected_status: [400]

- test:
    - group: "USER BAD LEN INPUT"
    - name: "Create long named alfred"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "alfred",
                "service": "user",
                "email": "alfred@noemail.com",
                "name": "Alfred Blaine Charles David Earl Frederick Gerald Hubert Irvim John Kenneth Loyd Martin Ner",
                "profile": "user"
              }'
    - headers: {'Content-Type': 'application/json', 'Authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOjAsInVzZXJuYW1lIjoidGVzdEFkbWluIn0.5-5OGSQSpzfF_k28IlEeV60NC8UuhAgSo55KAi0aLTU'}
    - expected_status: [400]

    - test:
      - group: "USER BAD LEN INPUT"
      - name: "Create long email alfred"
      - url: "/user"
      - method: "POST"
      - body: '{
                  "username": "alfred",
                  "service": "user",
                  "email": "alfredblainecharlesdavidearlfrederickgeraldhubertirvimjohnkennethloydmartinneroalfredblainecharlesdavidearlfrederickgeraldhubertirvimjohnkennethloydmartinneroalfredblainecharlesdavidearlfrederickgeraldhubertirvimjohnkennethloydmartin@companyabsurdname.com",
                  "name": "Alfred (TestUser)",
                  "profile": "user"
                }'
      - headers: {'Content-Type': 'application/json', 'Authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOjAsInVzZXJuYW1lIjoidGVzdEFkbWluIn0.5-5OGSQSpzfF_k28IlEeV60NC8UuhAgSo55KAi0aLTU'}
      - expected_status: [400]

      - test:
        - group: "USER BAD LEN INPUT"
        - name: "Create long service alfred"
        - url: "/user"
        - method: "POST"
        - body: '{
                    "username": "alfred",
                    "service": "user41charXaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                    "email": "alfred@companyname.com",
                    "name": "Alfred (TestUser)",
                    "profile": "user"
                  }'
        - headers: {'Content-Type': 'application/json', 'Authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOjAsInVzZXJuYW1lIjoidGVzdEFkbWluIn0.5-5OGSQSpzfF_k28IlEeV60NC8UuhAgSo55KAi0aLTU'}
        - expected_status: [400]


    - test:
        - group: "USER BAD LEN INPUT"
        - name: "Create long proile alfred"
        - url: "/user"
        - method: "POST"
        - body: '{
                    "username": "alfred",
                    "service": "user",
                    "email": "alfred@companyname.com",
                    "name": "Alfred (TestUser)",
                    "profile": "longuserprofileeeeeeeeeeeeeeeee"
                  }'
        - headers: {'Content-Type': 'application/json', 'Authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyaWQiOjAsInVzZXJuYW1lIjoidGVzdEFkbWluIn0.5-5OGSQSpzfF_k28IlEeV60NC8UuhAgSo55KAi0aLTU'}
        - expected_status: [400]


- test:
    - group: "JWT AUTH TEST"
    - name: "try to create alfred without given a JWT"
    - url: "/user"
    - method: "POST"
    - body: '{
                "username": "alfred",
                "service": "user",
                "email": "alfred@companyname.com",
                "name": "Alfred (TestUser)",
                "profile": "profile"
              }'
    - headers: {'Content-Type': 'application/json'}
    - expected_status: [401]


- test:
    - group: "JWT AUTH TEST"
    - name: "try to get rid of alfred withou given a JWT"
    - url: "/user/alfred_testuser"
    - method: 'DELETE'
    - expected_status: [401]
